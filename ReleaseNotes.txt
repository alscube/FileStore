
    Change Notes

FileStore 3.3.2
    * Update documentation and licensing

FileStore 3.3.1

    * Add FieldValiateT for all validators
    * Add Validators for UINT64 types
    * Add Validators for Boolean types
    * Renamed 'GetFieldList' to 'GetFieldNameList' for clearity
    * Renamed 'GetField / SetField' to 'GetFieldValue / SetFieldValue' for clearity
    * Add test to exeplify how the record is cleared
    * For user field definition, 'fRecordLastField+1' has been replaced with 'fFirstUserField'

Filestore 3.3.0

    * Enhanced Field validation, added ValidateField as a convenince function
    * Added method SetSkipDeletedRecords to FSFileBase, the FileStore will
      skip delete records when calling ReadNext, default is false
    * fixed range validation for floats and doubles
    * Convert macOS library from a static to a dynamic library
    * Moved FileStore libraries down a level to platform specific directories
    * Fixed sample object and moc directories so debug and release are different
    
FileStore 3.2.0

    * Build for Qt 6
    * Rename all files to begin with FS, ie: FSFileBase
    * Build Universal Binary for macOS, x86_64 and arm64 (Apple Silicon)

FileStore 3.1.1

    * Update Min / Max field value support for Floats and Doubles

FileStore 3.1.0

    * "bool createDefaultEntries = true" has been removed from the CreateT( ) method.
    * To create default entries call "ResultValue CreateDefaultEntries( )' or
      "void CreateDefaultEntriesT( )" directly

    * Documentation update for ReadNext() / ReadNextT()

    * Add access to the additional message passed to a ResultException, see
      "const QString& ResultException::MessageString()"

    * Add field definitions for floats (InsertFloatField) and doubles (InsertDoubleField).
      See void RecordBaseFields::InsertFloatField( ..... )

    * Add validation functions (Validate() / ValidateT()) for float and double values.
      See void ValidateT( const float value, const FieldDef* fieldDef );
